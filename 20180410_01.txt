边界值测试

应优先使用边界值测试，软件边界上往往出现问题的几率更大，边界值测试效率更高，可以使用更少的测试用例，更快的定位出缺陷。

从测试风险，测试用例数量，测试用例典型性，时间效率，测试冗余角度考虑优先用边界值测试 而从测试覆盖，缺陷定位角度看优先用等价类测试

优先使用等价类测试，有效等价类比较容易找，一般在需求中可以直接找到。数量较少。所以有效等价类测试也称为正向测试或者通过测试。边界值测试容易产生冗余。

我认为应该优先使用边界值测试，从测试风险上讲，边界情况往往伴随内存溢出或者各种异常情况，会产生比较严重的后果，应该先把这种情况排除。而且缺陷定位可能更加方便，同时可以找出很多典型的测试用例。

等价类划分法：将测试过程中的输入、输出、操作等相似内容分组，从每组中挑选具有代表性的内容作为测试用例，划分份有效等价类和无效等价类。 等价类测试风险更低，测试用例少，覆盖广 边界测试风险更高，用例多，覆盖少。

边界值测试，因为从测试风险的角度来看，先将边界测试完了会安全一点

优先使用等价类测试，测试覆盖大，测试用例比较典型，测试用例方法简洁，测试风险小，缺陷定位也准确

我觉得应优先使用边界值测试。 测试风险上，边界值测试更可能发现问题；用例数量相对少；缺陷易定位。 等价类测试相对覆盖面更广，用例更多，不易定位，应放在后面进行测试。

优先等价类测试。如果在测试用例不是很多的情况下，等价类测试往往会比边界测试测试的对象重要一些。因为边界情况很可能是用户小概率才会遇到的情况，而等价类测试的内容却是用户经常遇到的情况。从测试覆盖的角度讲，等价类测试也一定会比边界测试覆盖率高。

优先考虑边界值测试